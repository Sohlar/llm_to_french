#include <arpa/inet.h>
#include <netinet/in.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <unistd.h>

// Function to send a translation request to OpenAI API and return the response
char *translate_text_to_french(const char *english_text) {
    int sockfd;
    struct sockaddr_in servaddr;
    const char *api_key = "your_openai_api_key";
    char prompt[256];
    snprintf(prompt, sizeof(prompt), "Translate the following English text to French: '%s'", english_text);
    const char *http_request_template = "POST /v1/engines/davinci-codex/completions HTTP/1.1\r\n"
                                         "Host: api.openai.com\r\n"
                                         "Authorization: Bearer %s\r\n"
                                         "Content-Type: application/json\r\n"
                                         "Content-Length: %zu\r\n"
                                         "\r\n"
                                         "{\"model\": \"text-davinci-002\", \"prompt\": \"%s\", \"max_tokens\": 50}";

    char post_data[1024];
    snprintf(post_data, sizeof(post_data), http_request_template, api_key, strlen(prompt) + 64, prompt);

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd == -1) {
        perror("socket");
        exit(EXIT_FAILURE);
    }

    memset(&servaddr, 0, sizeof(servaddr));
    servaddr.sin_family = AF_INET;
    servaddr.sin_port = htons(443);
    inet_pton(AF_INET, "52.202.62.200", &servaddr.sin_addr);

    if (connect(sockfd, (struct sockaddr *)&servaddr, sizeof(servaddr)) != 0) {
        perror("connect");
        exit(EXIT_FAILURE);
    }

    write(sockfd, post_data, strlen(post_data));

    static char response_data[4096];
    ssize_t response_size = read(sockfd, response_data, sizeof(response_data) - 1);
    if (response_size > 0) {
        response_data[response_size] = '\0';
    } else {
        perror("read");
    }

    close(sockfd);
    return response_data;
}

int main() {
    const char *english_text = "Hello, how are you?";
    char *french_translation = translate_text_to_french(english_text);
    printf("English: %s\nFrench: %s\n", english_text, french_translation);
    return 0;
}
